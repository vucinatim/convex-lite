/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as KanbanRouteImport } from './routes/kanban'
import { Route as AdminRouteImport } from './routes/admin'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AdminTableNameRouteImport } from './routes/admin/$tableName'

const KanbanRoute = KanbanRouteImport.update({
  id: '/kanban',
  path: '/kanban',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminRoute = AdminRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminTableNameRoute = AdminTableNameRouteImport.update({
  id: '/$tableName',
  path: '/$tableName',
  getParentRoute: () => AdminRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteWithChildren
  '/kanban': typeof KanbanRoute
  '/admin/$tableName': typeof AdminTableNameRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteWithChildren
  '/kanban': typeof KanbanRoute
  '/admin/$tableName': typeof AdminTableNameRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteWithChildren
  '/kanban': typeof KanbanRoute
  '/admin/$tableName': typeof AdminTableNameRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/admin' | '/kanban' | '/admin/$tableName'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/admin' | '/kanban' | '/admin/$tableName'
  id: '__root__' | '/' | '/admin' | '/kanban' | '/admin/$tableName'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminRoute: typeof AdminRouteWithChildren
  KanbanRoute: typeof KanbanRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/kanban': {
      id: '/kanban'
      path: '/kanban'
      fullPath: '/kanban'
      preLoaderRoute: typeof KanbanRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/$tableName': {
      id: '/admin/$tableName'
      path: '/$tableName'
      fullPath: '/admin/$tableName'
      preLoaderRoute: typeof AdminTableNameRouteImport
      parentRoute: typeof AdminRoute
    }
  }
}

interface AdminRouteChildren {
  AdminTableNameRoute: typeof AdminTableNameRoute
}

const AdminRouteChildren: AdminRouteChildren = {
  AdminTableNameRoute: AdminTableNameRoute,
}

const AdminRouteWithChildren = AdminRoute._addFileChildren(AdminRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminRoute: AdminRouteWithChildren,
  KanbanRoute: KanbanRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
